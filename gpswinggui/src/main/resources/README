=====================================================================
=== GEOPUBLISHING-FRAMEWORK README (2010-05-24, Stefan A. Tzeggai)===
===                                           	        		  ===
=== http://wald.intevation.org/projects/atlas-framework/          ===
=== http://www.geopublishing.org		        		          ===
=====================================================================

This file contains some informations ...

(0) about licenses
(1) about terms and abbreviations
(2) about the dependencies needed by the project
(3) about how to build the project
(4) about localization and i8n

-----------------------------------------------------------
(0) Licenses
-----------------------------------------------------------
The code and libraries  in the SVN are licensed under many different licenses. But 
they have in common, that they are all "free enough" to be used by us to create 
other free software:
* Geopublisher - the software to create atlases: GNU Public License
* AtlasViewer - the software to present (or view or replay) these atlases: Lesser GNU Public License
* AtlasStyler - the software to create XML SymbologyEncoding documents: Lesser GNU Public License

A detailed overview of all licenses involved can be found at: http://de.geopublishing.org/Lizenzen (DE) or http://en.geopublishing.org/Licenses (EN) or http://fr.geopublishing.org/Licences (FR)   

-----------------------------------------------------------
(1) Terms and abbreviations
-----------------------------------------------------------
Geopublisher (GP) is the application that allows to design and export
digital multimedia atlases. 
AtlasViewer (AV) is the appliaction that "replays" the atlases that have been 
created with Geopublisher. 
When Geopublisher exports an atlas, it packs the AtlasViewer with the custom
data. After exporting, the atlas is ready for distribution via CD or JavaWebStart.
JavaWebStart (JWS) is a technology to start Java applications from the web. JWS 
requires applications to be signed.
AtlasStyler (AS) is a Swing JDialog that allows to create OGC SymbologyEncoding (SE) 
documents. AS can be started individually as a stand-alone application to create 
styles for any feature source. 
When designing styles within Geopublisher, the AtlasStyler is already included. To make
make it clear: You need the AtlasStyler stand-alone application only if you are not
creating an atlas.    
         
-----------------------------------------------------------
(2) Dependencies to other libraries
-----------------------------------------------------------
Geopublisher needs a Java 1.6 JRE. All other dependent libraries are included in 
the svn in the folders "lib" and "libUnsigned". For debugging within an IDE the 
unsigned libs have to be used in the classpath. All libs in lib are signed and 
packed with pack200 compression.
When exporting an atlas from geopublisher, the JARs from lib are used, so they don't
have to be signed while exporting. This also concludes, that the GP and the atlases 
that are created with it, are always signed with the same certificate.

The SCHMITZM utilities library is used: http://wald.intevation.org/projects/schmitzm

-----------------------------------------------------------
(3) Building the project
-----------------------------------------------------------
Since version 1.5 this project uses maven and ant. Run 
 mvn package
in the trunk folder to create your own jar for Geopublisher and AtlasStyler.  

-----------------------------------------------------------
(4) Localization and i8n
-----------------------------------------------------------
English default translations for the project are stored in files:
/ascore/src/main/resources/locales/AtlasStylerTranslation.properties
/gpcore/src/main/resources/locales/Geopublisher.properties
/gpcore/src/main/resources/locales/AtlasViewerTranslation.properties
Translations for frensh and german also exist in the same folders.

To create a new language 
1. determine its two letter language code, let say "de"
2. create files ..._de.properies next to the default files. 
